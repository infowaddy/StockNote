// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockNote.DataAccess;

#nullable disable

namespace StockNote.DataAccess.Migrations.StockNoteDbContext
{
    [DbContext(typeof(StockNoteDBContext))]
    [Migration("20230312092343_initStockNote")]
    partial class initStockNote
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockNote.Models.Item", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Barcode");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("UnitID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UnitID");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("Barcode")
                        .IsUnique();

                    b.HasIndex("Name");

                    b.HasIndex("UnitID");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("StockNote.Models.StockInWarehouse", b =>
                {
                    b.Property<Guid>("ItemID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ItemID");

                    b.Property<Guid>("WarehouseID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("WarehouseID");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("Balance");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<decimal>("MinBalThreshold")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("MinBalThreshold");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ModifiedBy");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ItemID", "WarehouseID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("StockInWarehouses");
                });

            modelBuilder.Entity("StockNote.Models.StockTransaction", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FromWarehouseID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("FromWarehouseID");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<bool>("IsSold")
                        .HasColumnType("bit")
                        .HasColumnName("IsSold");

                    b.Property<Guid>("ItemID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ItemID");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ModifiedBy");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(8, 2)")
                        .HasColumnName("Quantity");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Remark");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid?>("ToWarehouseID")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ToWarehouseID");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime")
                        .HasColumnName("TransactionDate");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("FromWarehouseID");

                    b.HasIndex("ItemID");

                    b.HasIndex("ToWarehouseID");

                    b.HasIndex("TransactionDate")
                        .IsDescending();

                    b.ToTable("StockTransactions");
                });

            modelBuilder.Entity("StockNote.Models.Unit", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("Name");

                    b.ToTable("Units");
                });

            modelBuilder.Entity("StockNote.Models.Warehouse", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Address");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CreatedBy");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("IsActive");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name");

                    b.Property<byte[]>("RowVersion")
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("Name");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("StockNote.Models.Item", b =>
                {
                    b.HasOne("StockNote.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("StockNote.Models.StockInWarehouse", b =>
                {
                    b.HasOne("StockNote.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockNote.Models.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("StockNote.Models.StockTransaction", b =>
                {
                    b.HasOne("StockNote.Models.Warehouse", "FromWarehouse")
                        .WithMany()
                        .HasForeignKey("FromWarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockNote.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockNote.Models.Warehouse", "ToWarehouse")
                        .WithMany()
                        .HasForeignKey("ToWarehouseID");

                    b.Navigation("FromWarehouse");

                    b.Navigation("Item");

                    b.Navigation("ToWarehouse");
                });
#pragma warning restore 612, 618
        }
    }
}
